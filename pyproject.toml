[tool.poetry]
name = "travel-coolex"
version = "1.0.0"
description = "Techinal Assignment project for Strativ AB"
authors = ["K. M. Jiaul Islam Jibon <jiaulislam.ict.bd@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
django = "^5.0.6"
djangorestframework = "^3.15.2"
httpx = "^0.27.0"
drf-spectacular = "^0.27.2"
djangorestframework-camel-case = "^1.4.2"
daphne = "^4.1.2"
pandas = "^2.2.2"


[tool.poetry.group.dev.dependencies]
ruff = "^0.5.0"
black = "^24.4.2"
pre-commit = "^3.7.1"
poetry-plugin-export = "^1.8.0"
rich = "^13.7.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-django = "^4.8.0"
responses = "^0.25.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 88
target-version = ['py310']


[tool.isort]
atomic = true
profile = "black"
line_length = 88
skip_gitignore = true
skip_glob = ["tests/data", "profiling"]
known-third-party = [
    "django",
    "django-cors-headers",
    "djangorestframework",
    "djangorestframework-simplejwt",
    "drf-spectacular",
    "httpx",
    "djangorestframework-camel-case",
]


[tool.ruff]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "N", # pep8-naming
    "T20", # flake8-print
]

ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
]

extend-exclude = [".pyenv", ".vscode", "/usr/**"]
